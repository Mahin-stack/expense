{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\New\\\\Desktop\\\\expense\\\\src\\\\Tracker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport \"./Tracker.css\";\nimport Transaction from \"./Transaction\";\n\nvar Tracker = function (_Component) {\n  _inherits(Tracker, _Component);\n\n  var _super = _createSuper(Tracker);\n\n  function Tracker() {\n    var _this;\n\n    _classCallCheck(this, Tracker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      transactions: [],\n      money: 0,\n      transactionName: '',\n      transactionType: '',\n      price: ''\n    };\n\n    _this.handleChange = function (input) {\n      return function (e) {\n        _this.setState(_defineProperty({}, input, e.target.value));\n      };\n    };\n\n    _this.addTransaction = function () {\n      var _this$state = _this.state,\n          transactionName = _this$state.transactionName,\n          transactionType = _this$state.transactionType,\n          price = _this$state.price,\n          money = _this$state.money;\n\n      if (transactionName && transactionType && price) {\n        var BackUpState = _this.state.transactions;\n        BackUpState.push({\n          id: BackUpState.length + 1,\n          name: transactionName,\n          type: transactionType,\n          price: price\n        });\n\n        _this.setState({\n          transactions: BackUpState,\n          money: transactionType === 'deposit' ? money + parseFloat(price) : money - parseFloat(price),\n          transactionName: '',\n          transactionType: '',\n          price: ''\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Tracker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"trackerBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }\n      }, React.createElement(\"div\", {\n        className: \"welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      }, React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, \"Hi Mahin \\uD83D\\uDE07\")), React.createElement(\"div\", {\n        className: \"totalMoney\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }\n      }, \"Net Balance = \\u20AC \", this.state.money), React.createElement(\"div\", {\n        className: \"newTransactionBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, React.createElement(\"div\", {\n        className: \"newTransaction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }\n      }, React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(\"input\", {\n        placeholder: \"Transaction Name\",\n        type: \"text\",\n        name: \"transactionName\",\n        value: this.state.transactionName,\n        onChange: this.handleChange('transactionName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }), React.createElement(\"div\", {\n        className: \"inputGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, React.createElement(\"select\", {\n        name: \"type\",\n        value: this.state.transactionType,\n        onChange: this.handleChange('transactionType'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Type\"), React.createElement(\"option\", {\n        value: \"deposit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, \"Deposit\"), React.createElement(\"option\", {\n        value: \"expense\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"Expense\")), React.createElement(\"input\", {\n        placeholder: \"Price\",\n        type: \"text\",\n        name: \"price\",\n        value: this.state.price,\n        onChange: this.handleChange('price'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }))), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.addTransaction();\n        },\n        className: \"addTransaction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"+ Add Transaction\"))), React.createElement(\"div\", {\n        className: \"latestTransactions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }\n      }, React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }\n      }, \"Latest Transactions\"), React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, Object.keys(this.state.transactions).map(function (id) {\n        return React.createElement(Transaction, {\n          type: _this2.state.transactions[id].type,\n          name: _this2.state.transactions[id].name,\n          price: _this2.state.transactions[id].price,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Tracker;\n}(Component);\n\nexport { Tracker as default };","map":{"version":3,"sources":["C:/Users/New/Desktop/expense/src/Tracker.js"],"names":["React","Component","Transaction","Tracker","state","transactions","money","transactionName","transactionType","price","handleChange","input","e","setState","target","value","addTransaction","BackUpState","push","id","length","name","type","parseFloat","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Tracker.css';\r\nimport Transaction from './Transaction'\r\n\r\nexport default class Tracker extends Component{\r\n    state={\r\n        transactions:[],\r\n        money: 0,\r\n        transactionName: '',       \r\n        transactionType: '',\r\n        price: '',\r\n\r\n    }\r\n    handleChange = input=> e => {\r\n        this.setState({\r\n            [input]: e.target.value \r\n        });\r\n    }\r\n    addTransaction=()=>{\r\n        const{\r\n            transactionName, \r\n            transactionType,\r\n            price,\r\n            money,\r\n        }=this.state\r\n        if(transactionName && transactionType && price){\r\n\r\n            const BackUpState = this.state.transactions;\r\n            BackUpState.push({\r\n                id: BackUpState.length + 1,\r\n                name: transactionName,\r\n                type: transactionType,\r\n                price: price,\r\n               \r\n            });\r\n            this.setState({\r\n                transactions: BackUpState,\r\n                money: transactionType === 'deposit' ? money + parseFloat(price) : money - parseFloat(price),\r\n                transactionName: '',\r\n                transactionType: '',\r\n                price: ''\r\n            })\r\n        }\r\n    }\r\nrender(){\r\n   return(\r\n    <div className=\"trackerBlock\">\r\n    <div className=\"welcome\">\r\n        <span>Hi Mahin 😇</span>\r\n    </div>    \r\n\r\n    <div className='totalMoney'>Net Balance = € {this.state.money}</div>\r\n    <div className=\"newTransactionBlock\">\r\n    <div className=\"newTransaction\">\r\n        <form>\r\n            <input \r\n            placeholder='Transaction Name'\r\n            type='text'\r\n            name='transactionName'\r\n            value={this.state.transactionName}\r\n           onChange={this.handleChange('transactionName')}\r\n            />\r\n\r\n            <div className=\"inputGroup\">  \r\n            <select\r\n            name='type'\r\n           value={this.state.transactionType}\r\n           onChange={this.handleChange('transactionType')}\r\n             >\r\n            <option value='0'>Type</option>\r\n            <option value='deposit'>Deposit</option>\r\n            <option value='expense'>Expense</option>\r\n            </select>\r\n            <input \r\n            placeholder='Price'\r\n            type='text'\r\n            name='price'\r\n            value={this.state.price}\r\n            onChange={this.handleChange('price')}\r\n            />\r\n            </div>\r\n        </form>\r\n        <button onClick={() => this.addTransaction()} className=\"addTransaction\">+ Add Transaction</button>\r\n\r\n    </div>   \r\n     </div>\r\n     <div className=\"latestTransactions\">\r\n     <p>Latest Transactions</p>\r\n        <ul>\r\n       {\r\n           Object.keys(this.state.transactions).map((id)=> (\r\n            <Transaction \r\n            type={this.state.transactions[id].type}   \r\n            name={this.state.transactions[id].name}\r\n            price={this.state.transactions[id].price}\r\n\r\n\r\n            />\r\n           ))\r\n       }\r\n        </ul>\r\n     </div>\r\n     </div>\r\n\r\n   )\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}